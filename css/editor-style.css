.container {
    width: 100%;
    padding-right: 1rem;
    padding-left: 1rem
}
@media (min-width: 480px) {
    .container {
        max-width: 480px
    }
}
@media (min-width: 600px) {
    .container {
        max-width: 600px;
        padding-right: 2rem;
        padding-left: 2rem
    }
}
@media (min-width: 782px) {
    .container {
        max-width: 782px
    }
}
@media (min-width: 960px) {
    .container {
        max-width: 960px;
        padding-right: 0rem;
        padding-left: 0rem
    }
}
@media (min-width: 1280px) {
    .container {
        max-width: 1280px
    }
}
@media (min-width: 1440px) {
    .container {
        max-width: 1440px
    }
}
.alert {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    align-content: flex-start;
    align-items: center;
    justify-items: center;
    gap: 1rem;
    text-align: center;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    padding: 1rem;
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    border-radius: var(--rounded-box, 1rem);
    --alert-bg: hsl(var(--b2));
    --alert-bg-mix: hsl(var(--b1));
    background-color: var(--alert-bg)
}
@media (min-width: 640px) {
    .alert {
        grid-auto-flow: column;
        grid-template-columns: auto minmax(auto,1fr);
        justify-items: start;
        text-align: left
    }
}
.avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center
}
.badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    height: 1.25rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    width: -moz-fit-content;
    width: fit-content;
    padding-left: 0.563rem;
    padding-right: 0.563rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    border-radius: var(--rounded-badge, 1.9rem)
}
@media (hover:hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--bc) / var(--tw-text-opacity))
    }
    .menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--nc) / var(--tw-text-opacity))
    }
    .tab:hover {
        --tw-text-opacity: 1
    }
    .table tr.hover:hover,
  .table tr.hover:nth-child(even):hover {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b2) / var(--tw-bg-opacity))
    }
}
.btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    border-radius: var(--rounded-btn, 0.5rem);
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    min-height: 3rem;
    font-size: 0.875rem;
    line-height: 1em;
    gap: 0.5rem;
    font-weight: 600;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    text-transform: var(--btn-text-case, uppercase);
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline-color: hsl(var(--bc) / 1)
}
.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none
}
.btn-group > input[type="radio"].btn {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none
}
.btn-group > input[type="radio"].btn:before {
    content: attr(data-title)
}
.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
    width: auto;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content)
}
.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem)
}
.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.card figure {
    display: flex;
    align-items: center;
    justify-content: center
}
.card.image-full {
    display: grid
}
.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: 0.75;
    border-radius: var(--rounded-box, 1rem)
}
.card.image-full:before,
    .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1
}
.card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover
}
.card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity))
}
.checkbox {
    flex-shrink: 0;
    --chkbg: var(--bc);
    --chkfg: var(--b1);
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
    border-radius: var(--rounded-btn, 0.5rem)
}
@media (hover: hover) {
    .btm-nav > *.disabled:hover,
      .btm-nav > *[disabled]:hover {
        pointer-events: none;
        --tw-border-opacity: 0;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.1;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2
    }
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--b3) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b3) / var(--tw-bg-opacity))
    }
    .btn-primary:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity))
    }
    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%
    }
    .btn-outline.btn-primary:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--pc) / var(--tw-text-opacity))
    }
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.2;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2
    }
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity))
    }
    :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover, :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
        cursor: pointer;
        background-color: hsl(var(--bc) / 0.1);
        --tw-text-opacity: 1;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        outline: 2px solid transparent;
        outline-offset: 2px
    }
    .tab[disabled],
    .tab[disabled]:hover {
        cursor: not-allowed;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2
    }
}
.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: 1rem;
         column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem
}
.footer > * {
    display: grid;
    place-items: start;
    gap: 0.5rem
}
@media (min-width: 48rem) {
    .footer {
        grid-auto-flow: column
    }
    .footer-center {
        grid-auto-flow: row dense
    }
}
.label {
    display: flex;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    align-items: center;
    justify-content: space-between;
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem
}
.input {
    flex-shrink: 1;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem)
}
.input-group > .input {
    isolation: isolate
}
.input-group > *,
  .input-group > .input,
  .input-group > .textarea,
  .input-group > .select {
    border-radius: 0px
}
.join {
    display: inline-flex;
    align-items: stretch;
    border-radius: var(--rounded-btn, 0.5rem)
}
.join :where(.join-item) {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0
}
.join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0
}
.join .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0
}
.join .dropdown .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .dropdown .join-item {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit
}
.join :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
    border-end-start-radius: inherit;
    border-start-start-radius: inherit
}
.join .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0
}
.join :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit
}
@supports not selector(:has(*)) {
    :where(.join *) {
        border-radius: inherit
    }
}
@supports selector(:has(*)) {
    :where(.join *:has(.join-item)) {
        border-radius: inherit
    }
}
.link {
    cursor: pointer;
    text-decoration-line: underline
}
.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding: 0.5rem
}
.menu :where(li ul) {
    position: relative;
    white-space: nowrap;
    margin-left: 1rem;
    padding-left: 0.5rem
}
.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none
}
.menu li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    color: hsl(var(--bc) / 0.3)
}
.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none
}
:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch
}
:where(.menu li) .badge {
    justify-self: end
}
.radio {
    flex-shrink: 0;
    --chkbg: var(--bc);
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: 9999px;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2
}
.rating {
    position: relative;
    display: inline-flex
}
.rating :where(input) {
    cursor: pointer;
    border-radius: 0px;
    animation: rating-pop var(--animation-input, 0.25s) ease-out;
    height: 1.5rem;
    width: 1.5rem;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1
}
.select {
    display: inline-flex;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    min-height: 3rem;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem);
    background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
    background-position: calc(100% - 20px) calc(1px + 50%),
    calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px,
    4px 4px;
    background-repeat: no-repeat
}
.select[multiple] {
    height: auto
}
.steps .step {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-columns: auto;
    grid-template-rows: repeat(2, minmax(0, 1fr));
    grid-template-rows: 40px 1fr;
    place-items: center;
    text-align: center;
    min-width: 4rem
}
.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    place-content: center;
    cursor: pointer
}
.swap > * {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity
}
.swap input {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none
}
.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
    opacity: 0
}
.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
    opacity: 0
}
.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
    opacity: 1
}
.tabs {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end
}
.tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    height: 2rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    --tab-padding: 1rem;
    --tw-text-opacity: 0.5;
    --tab-color: hsl(var(--bc) / var(--tw-text-opacity, 1));
    --tab-bg: hsl(var(--b1) / var(--tw-bg-opacity, 1));
    --tab-border-color: hsl(var(--b3) / var(--tw-bg-opacity, 1));
    color: var(--tab-color);
    padding-left: var(--tab-padding, 1rem);
    padding-right: var(--tab-padding, 1rem)
}
.table {
    position: relative;
    width: 100%;
    text-align: left;
    font-size: 0.875rem;
    line-height: 1.25rem;
    border-radius: var(--rounded-box, 1rem)
}
.table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
.table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
.table :where(.table-pin-cols tr th) {
    position: sticky;
    left: 0px;
    right: 0px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
.textarea {
    flex-shrink: 1;
    min-height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem)
}
.toggle {
    flex-shrink: 0;
    --tglbg: hsl(var(--b1));
    --handleoffset: 1.5rem;
    --handleoffsetcalculator: calc(var(--handleoffset) * -1);
    --togglehandleborder: 0 0;
    height: 1.5rem;
    width: 3rem;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.5;
    border-radius: var(--rounded-badge, 1.9rem);
    transition: background,
    box-shadow var(--animation-input, 0.2s) ease-out;
    box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
    0 0 0 2px var(--tglbg) inset,
    var(--togglehandleborder)
}
.btm-nav > *:where(.active) {
    border-top-width: 2px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}
.btm-nav > *.disabled,
    .btm-nav > *[disabled] {
    pointer-events: none;
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2
}
.btm-nav > * .label {
    font-size: 1rem;
    line-height: 1.5rem
}
.btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97))
}
.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px
}
.btn-primary {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
    outline-color: hsl(var(--p) / 1)
}
.btn-primary.btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity))
}
.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor
}
.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}
.btn-outline.btn-primary {
    --tw-text-opacity: 1;
    color: hsl(var(--p) / var(--tw-text-opacity))
}
.btn-outline.btn-primary.btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity))
}
.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2
}
.btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity))
}
.btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-color: hsl(var(--p) / 1)
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity))
}
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: hsl(var(--p) / 1)
}
@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, 0.98))
    }
    40% {
        transform: scale(1.02)
    }
    100% {
        transform: scale(1)
    }
}
.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset
}
.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit
}
.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}
.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity))
}
.card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem
}
.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit
}
.checkbox:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1)
}
.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
      linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
      linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
      linear-gradient(
        45deg,
        hsl(var(--chkbg)) 30%,
        hsl(var(--chkfg)) 30.99%,
        hsl(var(--chkfg)) 40%,
        transparent 40.99%
      ),
      linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%)
}
.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(
        0deg,
        hsl(var(--chkbg)) 43%,
        hsl(var(--chkfg)) 43%,
        hsl(var(--chkfg)) 57%,
        hsl(var(--chkbg)) 57%
      )
}
.checkbox:disabled {
    cursor: not-allowed;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    opacity: 0.2
}
@keyframes checkmark {
    0% {
        background-position-y: 5px
    }
    50% {
        background-position-y: -2px
    }
    100% {
        background-position-y: 0
    }
}
[dir="rtl"] .checkbox:checked,
    [dir="rtl"] .checkbox[checked="true"],
    [dir="rtl"] .checkbox[aria-checked="true"] {
    background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
        linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
        linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
        linear-gradient(
          -45deg,
          hsl(var(--chkbg)) 30%,
          hsl(var(--chkfg)) 30.99%,
          hsl(var(--chkfg)) 40%,
          transparent 40.99%
        ),
        linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%)
}
.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}
.input:focus,
  .input:focus-within {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2)
}
.input-disabled,
  .input:disabled,
  .input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2
}
.input-disabled::-moz-placeholder, .input:disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
.input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
.join > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: -1px
}
.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}
.loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: 1.5rem;
    background-color: currentColor;
    -webkit-mask-size: 100%;
            mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
            mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E")
}
:where(.menu li:empty) {
    background-color: hsl(var(--bc) / 0.1);
    margin: 0.5rem 1rem;
    height: 1px
}
.menu :where(li ul):before {
    position: absolute;
    bottom: 0.75rem;
    left: 0px;
    top: 0.75rem;
    width: 1px;
    background-color: hsl(var(--bc) / 0.1);
    content: ""
}
.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    text-align: left;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    border-radius: var(--rounded-btn, 0.5rem);
    text-wrap: balance
}
:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):is(summary):not(.active):focus-visible,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(summary):not(.active):focus-visible {
    cursor: pointer;
    background-color: hsl(var(--bc) / 0.1);
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline: 2px solid transparent;
    outline-offset: 2px
}
.menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity))
}
.menu :where(li > details > summary)::-webkit-details-marker {
    display: none
}
.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
    justify-self: end;
    display: block;
    margin-top: -0.5rem;
    height: 0.5rem;
    width: 0.5rem;
    transform: rotate(45deg);
    transition-property: transform, margin-top;
    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    content: "";
    transform-origin: 75% 75%;
    box-shadow: 2px 2px;
    pointer-events: none
}
.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    transform: rotate(225deg);
    margin-top: 0
}
.mockup-phone .display {
    overflow: hidden;
    border-radius: 40px;
    margin-top: -25px
}
.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    padding-left: 2rem
}
.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    left: 0.5rem;
    top: 50%;
    aspect-ratio: 1 / 1;
    height: 0.75rem;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor;
    opacity: 0.6
}
.mockup-browser .mockup-browser-toolbar .input:after {
    content: "";
    position: absolute;
    left: 1.25rem;
    top: 50%;
    height: 0.5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor;
    opacity: 0.6
}
@keyframes modal-pop {
    0% {
        opacity: 0
    }
}
@keyframes progress-loading {
    50% {
        background-position-x: -115%
    }
}
.radio:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1)
}
.radio:checked,
  .radio[aria-checked="true"] {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    animation: radiomark var(--animation-input, 0.2s) ease-out;
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset,
      0 0 0 4px hsl(var(--b1)) inset
}
.radio:disabled {
    cursor: not-allowed;
    opacity: 0.2
}
@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 12px hsl(var(--b1)) inset,
      0 0 0 12px hsl(var(--b1)) inset
    }
    50% {
        box-shadow: 0 0 0 3px hsl(var(--b1)) inset,
      0 0 0 3px hsl(var(--b1)) inset
    }
    100% {
        box-shadow: 0 0 0 4px hsl(var(--b1)) inset,
      0 0 0 4px hsl(var(--b1)) inset
    }
}
.rating input {
    -moz-appearance: none;
         appearance: none;
    -webkit-appearance: none
}
.rating .rating-hidden {
    width: 0.5rem;
    background-color: transparent
}
.rating input:checked ~ input,
  .rating input[aria-checked="true"] ~ input {
    --tw-bg-opacity: 0.2
}
.rating input:focus-visible {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 300ms;
    transform: translateY(-0.125em)
}
.rating input:active:focus {
    animation: none;
    transform: translateY(-0.125em)
}
@keyframes rating-pop {
    0% {
        transform: translateY(-0.125em)
    }
    40% {
        transform: translateY(-0.125em)
    }
    100% {
        transform: translateY(0)
    }
}
.select:focus {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2)
}
.select-disabled,
  .select:disabled,
  .select[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2
}
.select-disabled::-moz-placeholder, .select:disabled::-moz-placeholder, .select[disabled]::-moz-placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
.select-disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
.select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
    background-image: none;
    padding-right: 1rem
}
[dir="rtl"] .select {
    background-position: calc(0% + 12px) calc(1px + 50%),
    calc(0% + 16px) calc(1px + 50%)
}
.steps .step:before {
    top: 0px;
    grid-column-start: 1;
    grid-row-start: 1;
    height: 0.5rem;
    width: 100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    content: "";
    margin-left: -100%
}
.steps .step:after {
    content: counter(step);
    counter-increment: step;
    z-index: 1;
    position: relative;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    height: 2rem;
    width: 2rem;
    place-items: center;
    place-self: center;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity))
}
.steps .step:first-child:before {
    content: none
}
.steps .step[data-content]:after {
    content: attr(data-content)
}
.tab.tab-active:not(.tab-disabled):not([disabled]) {
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 1;
    --tw-text-opacity: 1
}
.tab:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.tab:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: -3px
}
.tab:focus-visible.tab-lifted {
    border-bottom-right-radius: var(--tab-radius, 0.5rem);
    border-bottom-left-radius: var(--tab-radius, 0.5rem)
}
.tab-disabled,
  .tab[disabled] {
    cursor: not-allowed;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2
}
.tabs-boxed .tab {
    border-radius: var(--rounded-btn, 0.5rem)
}
.table :where(th, td) {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    vertical-align: middle
}
.table tr.active,
  .table tr.active:nth-child(even),
  .table-zebra tbody tr:nth-child(even) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity))
}
.table-zebra tr.active,
    .table-zebra tr.active:nth-child(even),
    .table-zebra-zebra tbody tr:nth-child(even) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity))
}
.table :where(thead, tbody) :where(tr:not(:last-child)),
    .table :where(thead, tbody) :where(tr:first-child:last-child) {
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-bottom-color: hsl(var(--b2) / var(--tw-border-opacity))
}
.table :where(thead, tfoot) {
    white-space: nowrap;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 700;
    color: hsl(var(--bc) / 0.6)
}
.textarea:focus {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2)
}
.textarea-disabled,
  .textarea:disabled,
  .textarea[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2
}
.textarea-disabled::-moz-placeholder, .textarea:disabled::-moz-placeholder, .textarea[disabled]::-moz-placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
.textarea-disabled::placeholder,
  .textarea:disabled::placeholder,
  .textarea[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2
}
@keyframes toast-pop {
    0% {
        transform: scale(0.9);
        opacity: 0
    }
    100% {
        transform: scale(1);
        opacity: 1
    }
}
[dir="rtl"] .toggle {
    --handleoffsetcalculator: calc(var(--handleoffset) * 1)
}
.toggle:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2)
}
.toggle:checked,
  .toggle[checked="true"],
  .toggle[aria-checked="true"] {
    --handleoffsetcalculator: var(--handleoffset);
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1
}
[dir="rtl"] .toggle:checked, [dir="rtl"] .toggle[checked="true"], [dir="rtl"] .toggle[aria-checked="true"] {
    --handleoffsetcalculator: calc(var(--handleoffset) * -1)
}
.toggle:indeterminate {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
      0 0 0 2px var(--tglbg) inset
}
[dir="rtl"] .toggle:indeterminate {
    box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
        0 0 0 2px var(--tglbg) inset
}
.toggle:disabled {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    background-color: transparent;
    opacity: 0.3;
    --togglehandleborder: 0 0 0 3px hsl(var(--bc)) inset,
      var(--handleoffsetcalculator) 0 0 3px hsl(var(--bc)) inset
}
.btm-nav-xs > *:where(.active) {
    border-top-width: 1px
}
.btm-nav-sm > *:where(.active) {
    border-top-width: 2px
}
.btm-nav-md > *:where(.active) {
    border-top-width: 2px
}
.btm-nav-lg > *:where(.active) {
    border-top-width: 4px
}
.join.join-vertical {
    flex-direction: column
}
.join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit
}
.join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit
}
.join.join-horizontal {
    flex-direction: row
}
.join.join-horizontal .join-item:first-child:not(:last-child),
  .join.join-horizontal *:first-child:not(:last-child) .join-item {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: inherit;
    border-top-left-radius: inherit
}
.join.join-horizontal .join-item:last-child:not(:first-child),
  .join.join-horizontal *:last-child:not(:first-child) .join-item {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    border-bottom-right-radius: inherit;
    border-top-right-radius: inherit
}
.steps-horizontal .step {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(2, minmax(0, 1fr));
    place-items: center;
    text-align: center
}
.steps-vertical .step {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr))
}
.btn-group .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0
}
.btn-group .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0
}
.btn-group .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}
.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0
}
.btn-group-horizontal .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0
}
.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}
.btn-group-vertical .btn:first-child:not(:last-child) {
    margin-left: -0px;
    margin-top: -1px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0
}
.btn-group-vertical .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}
.join.join-vertical > :where(*:not(:first-child)) {
    margin-left: 0px;
    margin-right: 0px;
    margin-top: -1px
}
.join.join-horizontal > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: -1px
}
.steps-horizontal .step {
    grid-template-rows: 40px 1fr;
    grid-template-columns: auto;
    min-width: 4rem
}
.steps-horizontal .step:before {
    height: 0.5rem;
    width: 100%;
    --tw-translate-x: 0px;
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    content: "";
    margin-left: -100%
}
.steps-vertical .step {
    gap: 0.5rem;
    grid-template-columns: 40px 1fr;
    grid-template-rows: auto;
    min-height: 4rem;
    justify-items: start
}
.steps-vertical .step:before {
    height: 100%;
    width: 0.5rem;
    --tw-translate-x: -50%;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    margin-left: 50%
}
[dir="rtl"] .steps-vertical .step:before {
    margin-right: auto
}
.m-8 {
    margin: 2rem
}
.mx-auto {
    margin-left: auto;
    margin-right: auto
}
.my-12 {
    margin-top: 3rem;
    margin-bottom: 3rem
}
.my-3 {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem
}
.my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem
}
.mb-1 {
    margin-bottom: 0.25rem
}
.mb-10 {
    margin-bottom: 2.5rem
}
.mb-12 {
    margin-bottom: 3rem
}
.mb-4 {
    margin-bottom: 1rem
}
.mb-6 {
    margin-bottom: 1.5rem
}
.mb-8 {
    margin-bottom: 2rem
}
.mt-1 {
    margin-top: 0.25rem
}
.mt-4 {
    margin-top: 1rem
}
.mb-3 {
    margin-bottom: 0.75rem
}
.block {
    display: block
}
.inline-block {
    display: inline-block
}
.flex {
    display: flex
}
.table {
    display: table
}
.hidden {
    display: none
}
.h-1 {
    height: 0.25rem
}
.h-10 {
    height: 2.5rem
}
.h-2 {
    height: 0.5rem
}
.h-6 {
    height: 1.5rem
}
.max-h-96 {
    max-height: 24rem
}
.min-h-screen {
    min-height: 100vh
}
.w-16 {
    width: 4rem
}
.w-2 {
    width: 0.5rem
}
.w-6 {
    width: 1.5rem
}
.w-auto {
    width: auto
}
.w-fit {
    width: -moz-fit-content;
    width: fit-content
}
.w-full {
    width: 100%
}
.max-w-screen-md {
    max-width: 782px
}
.max-w-sm {
    max-width: 24rem
}
.flex-1 {
    flex: 1 1 0%
}
.flex-none {
    flex: none
}
.flex-grow {
    flex-grow: 1
}
.cursor-pointer {
    cursor: pointer
}
.list-decimal {
    list-style-type: decimal
}
.list-disc {
    list-style-type: disc
}
.flex-col {
    flex-direction: column
}
.items-center {
    align-items: center
}
.justify-end {
    justify-content: flex-end
}
.justify-center {
    justify-content: center
}
.justify-between {
    justify-content: space-between
}
.gap-1 {
    gap: 0.25rem
}
.gap-10 {
    gap: 2.5rem
}
.gap-2 {
    gap: 0.5rem
}
.overflow-hidden {
    overflow: hidden
}
.rounded {
    border-radius: 0.25rem
}
.rounded-full {
    border-radius: 9999px
}
.rounded-lg {
    border-radius: 0.5rem
}
.rounded-xl {
    border-radius: 0.75rem
}
.border {
    border-width: 1px
}
.border-2 {
    border-width: 2px
}
.border-b {
    border-bottom-width: 1px
}
.border-gray-100 {
    --tw-border-opacity: 1;
    border-color: rgb(243 244 246 / var(--tw-border-opacity))
}
.border-primary {
    --tw-border-opacity: 1;
    border-color: rgb(236 116 24 / var(--tw-border-opacity))
}
.border-primary\/20 {
    border-color: rgb(236 116 24 / 0.2)
}
.border-secondary {
    --tw-border-opacity: 1;
    border-color: rgb(56 56 55 / var(--tw-border-opacity))
}
.border-transparent {
    border-color: transparent
}
.bg-blue-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(29 78 216 / var(--tw-bg-opacity))
}
.bg-gray-100 {
    --tw-bg-opacity: 1;
    background-color: rgb(243 244 246 / var(--tw-bg-opacity))
}
.bg-gray-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(229 231 235 / var(--tw-bg-opacity))
}
.bg-gray-50 {
    --tw-bg-opacity: 1;
    background-color: rgb(249 250 251 / var(--tw-bg-opacity))
}
.bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity))
}
.bg-neutral-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(229 229 229 / var(--tw-bg-opacity))
}
.bg-neutral-300 {
    --tw-bg-opacity: 1;
    background-color: rgb(212 212 212 / var(--tw-bg-opacity))
}
.bg-primary {
    --tw-bg-opacity: 1;
    background-color: rgb(236 116 24 / var(--tw-bg-opacity))
}
.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}
.bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops))
}
.from-blue-50 {
    --tw-gradient-from: #eff6ff var(--tw-gradient-from-position);
    --tw-gradient-from-position:  ;
    --tw-gradient-to: rgb(239 246 255 / 0)  var(--tw-gradient-from-position);
    --tw-gradient-to-position:  ;
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}
.from-10\% {
    --tw-gradient-from-position: 10%
}
.via-sky-100 {
    --tw-gradient-via-position:  ;
    --tw-gradient-to: rgb(224 242 254 / 0)  var(--tw-gradient-to-position);
    --tw-gradient-to-position:  ;
    --tw-gradient-stops: var(--tw-gradient-from), #e0f2fe var(--tw-gradient-via-position), var(--tw-gradient-to)
}
.via-30\% {
    --tw-gradient-via-position: 30%
}
.to-blue-200 {
    --tw-gradient-to: #bfdbfe var(--tw-gradient-to-position);
    --tw-gradient-to-position:  
}
.to-90\% {
    --tw-gradient-to-position: 90%
}
.object-cover {
    -o-object-fit: cover;
       object-fit: cover
}
.p-1 {
    padding: 0.25rem
}
.p-4 {
    padding: 1rem
}
.px-12 {
    padding-left: 3rem;
    padding-right: 3rem
}
.px-2 {
    padding-left: 0.5rem;
    padding-right: 0.5rem
}
.px-2\.5 {
    padding-left: 0.625rem;
    padding-right: 0.625rem
}
.px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem
}
.px-4 {
    padding-left: 1rem;
    padding-right: 1rem
}
.px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem
}
.py-0 {
    padding-top: 0px;
    padding-bottom: 0px
}
.py-0\.5 {
    padding-top: 0.125rem;
    padding-bottom: 0.125rem
}
.py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem
}
.py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem
}
.py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem
}
.py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem
}
.py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem
}
.py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem
}
.pb-4 {
    padding-bottom: 1rem
}
.pl-3 {
    padding-left: 0.75rem
}
.pr-4 {
    padding-right: 1rem
}
.text-center {
    text-align: center
}
.align-top {
    vertical-align: top
}
.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem
}
.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem
}
.text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem
}
.text-5xl {
    font-size: 3rem;
    line-height: 1
}
.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem
}
.text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem
}
.text-xl {
    font-size: 1.25rem
}
.text-xs {
    font-size: 0.75rem;
    line-height: 1rem
}
.font-bold {
    font-weight: 700
}
.font-extrabold {
    font-weight: 800
}
.font-light {
    font-weight: 300
}
.font-medium {
    font-weight: 500
}
.font-normal {
    font-weight: 400
}
.font-semibold {
    font-weight: 600
}
.uppercase {
    text-transform: uppercase
}
.lowercase {
    text-transform: lowercase
}
.capitalize {
    text-transform: capitalize
}
.italic {
    font-style: italic
}
.leading-6 {
    line-height: 1.5rem
}
.leading-tight {
    line-height: 1.25
}
.tracking-tight {
    letter-spacing: -0.025em
}
.tracking-wider {
    letter-spacing: 0.05em
}
.text-black {
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity))
}
.text-blue-500 {
    --tw-text-opacity: 1;
    color: rgb(59 130 246 / var(--tw-text-opacity))
}
.text-gray-500 {
    --tw-text-opacity: 1;
    color: rgb(107 114 128 / var(--tw-text-opacity))
}
.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity))
}
.text-gray-700 {
    --tw-text-opacity: 1;
    color: rgb(55 65 81 / var(--tw-text-opacity))
}
.text-gray-800 {
    --tw-text-opacity: 1;
    color: rgb(31 41 55 / var(--tw-text-opacity))
}
.text-gray-900 {
    --tw-text-opacity: 1;
    color: rgb(17 24 39 / var(--tw-text-opacity))
}
.text-muted {
    --tw-text-opacity: 1;
    color: rgb(109 109 109 / var(--tw-text-opacity))
}
.text-primary {
    --tw-text-opacity: 1;
    color: rgb(236 116 24 / var(--tw-text-opacity))
}
.text-secondary {
    --tw-text-opacity: 1;
    color: rgb(56 56 55 / var(--tw-text-opacity))
}
.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity))
}
.underline {
    text-decoration-line: underline
}
.antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale
}
.outline {
    outline-style: solid
}
.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}
.transition {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.transition-colors {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.duration-200 {
    transition-duration: 200ms
}
.duration-500 {
    transition-duration: 500ms
}
.ease-in-out {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
}
.alignfull {
    margin: 2rem calc(50% - 50vw) !important;
    max-width: 100vw !important;
    width: 100vw
}
.alignwide {
    margin: 2rem 0;
    max-width: 1280px !important
}
.alignnone {
    margin-left: 0px;
    margin-right: 0px;
    height: auto;
    max-width: 100%
}
.aligncenter {
    margin: 0.5rem auto;
    display: block
}
@media (min-width: 600px) {
    .alignleft:not(.wp-block-button) {
        margin-right: 0.5rem;
        float: left
    }
    .alignright:not(.wp-block-button) {
        margin-left: 0.5rem;
        float: right
    }
    .wp-block-button.alignleft a {
        float: left;
        margin-right: 1rem
    }
    .wp-block-button.alignright a {
        float: right;
        margin-left: 1rem
    }
}
.wp-caption {
    display: inline-block
}
.wp-caption img {
    margin-bottom: 0.5rem;
    line-height: 1
}
.wp-caption-text {
    font-size: 0.875rem;
    color: #4b5563
}
body {
    font-family: Noto Sans, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"
}
.wp-block {
    max-width: 1280px
}
.wp-block[data-align=wide] {
    max-width: 1280px
}
.wp-block[data-align=full] {
    max-width: 100%
}
.hover\:scale-125:hover {
    --tw-scale-x: 1.25;
    --tw-scale-y: 1.25;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.hover\:bg-gray-100:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(243 244 246 / var(--tw-bg-opacity))
}
.hover\:bg-neutral-300:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(212 212 212 / var(--tw-bg-opacity))
}
.hover\:bg-primary\/60:hover {
    background-color: rgb(236 116 24 / 0.6)
}
.focus\:outline-none:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.focus\:ring-2:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}
.focus\:ring-gray-900:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(17 24 39 / var(--tw-ring-opacity))
}
.focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px
}
.focus\:ring-offset-white:focus {
    --tw-ring-offset-color: #fff
}
@media (prefers-color-scheme: dark) {
    .dark\:border-gray-700 {
        --tw-border-opacity: 1;
        border-color: rgb(55 65 81 / var(--tw-border-opacity))
    }
    .dark\:bg-gray-800 {
        --tw-bg-opacity: 1;
        background-color: rgb(31 41 55 / var(--tw-bg-opacity))
    }
    .dark\:text-white {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity))
    }
    .dark\:hover\:bg-gray-700:hover {
        --tw-bg-opacity: 1;
        background-color: rgb(55 65 81 / var(--tw-bg-opacity))
    }
    .dark\:hover\:text-white:hover {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity))
    }
}
@media (min-width: 600px) {
    .sm\:w-auto {
        width: auto
    }
}
@media (min-width: 782px) {
    .md\:my-6 {
        margin-top: 1.5rem;
        margin-bottom: 1.5rem
    }
    .md\:mt-0 {
        margin-top: 0px
    }
    .md\:flex {
        display: flex
    }
    .md\:w-1\/2 {
        width: 50%
    }
    .md\:flex-row {
        flex-direction: row
    }
    .md\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
        --tw-space-x-reverse: 0;
        margin-right: calc(2rem * var(--tw-space-x-reverse));
        margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)))
    }
    .md\:border-0 {
        border-width: 0px
    }
    .md\:bg-transparent {
        background-color: transparent
    }
    .md\:bg-white {
        --tw-bg-opacity: 1;
        background-color: rgb(255 255 255 / var(--tw-bg-opacity))
    }
    .md\:p-0 {
        padding: 0px
    }
    .md\:text-3xl {
        font-size: 1.875rem;
        line-height: 2.25rem
    }
    .md\:text-blue-700 {
        --tw-text-opacity: 1;
        color: rgb(29 78 216 / var(--tw-text-opacity))
    }
    .md\:hover\:bg-transparent:hover {
        background-color: transparent
    }
    .md\:hover\:text-blue-700:hover {
        --tw-text-opacity: 1;
        color: rgb(29 78 216 / var(--tw-text-opacity))
    }
    @media (prefers-color-scheme: dark) {
        .md\:dark\:bg-gray-900 {
            --tw-bg-opacity: 1;
            background-color: rgb(17 24 39 / var(--tw-bg-opacity))
        }
        .md\:dark\:text-blue-500 {
            --tw-text-opacity: 1;
            color: rgb(59 130 246 / var(--tw-text-opacity))
        }
        .md\:dark\:hover\:bg-transparent:hover {
            background-color: transparent
        }
        .md\:dark\:hover\:text-blue-500:hover {
            --tw-text-opacity: 1;
            color: rgb(59 130 246 / var(--tw-text-opacity))
        }
    }
}
@media (min-width: 960px) {
    .lg\:-mx-4 {
        margin-left: -1rem;
        margin-right: -1rem
    }
    .lg\:mx-4 {
        margin-left: 1rem;
        margin-right: 1rem
    }
    .lg\:mt-0 {
        margin-top: 0px
    }
    .lg\:block {
        display: block
    }
    .lg\:flex {
        display: flex
    }
    .lg\:hidden {
        display: none
    }
    .lg\:items-center {
        align-items: center
    }
    .lg\:justify-between {
        justify-content: space-between
    }
    .lg\:bg-transparent {
        background-color: transparent
    }
    .lg\:p-0 {
        padding: 0px
    }
    .lg\:text-4xl {
        font-size: 2.25rem;
        line-height: 2.5rem
    }
    .lg\:text-5xl {
        font-size: 3rem;
        line-height: 1
    }
    .lg\:text-6xl {
        font-size: 3.75rem;
        line-height: 1
    }
}
